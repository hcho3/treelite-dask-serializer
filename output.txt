Built a tree stump
Python buffer frames:
  * Frame 0: dtype uint8, length 240
    F0 EB 2C 77 BA 55 00 00 00 00 00 00 FF FF FF FF  01 00 00 00 02 00 00 00 01 20 20 20 00 00 00 80  00 00 00 00 01 00 20 61 20 66 75 6E 63 74 69 6F
    6E 20 74 6F 20 31 2D 44 20 73 6C 69 63 65 73 20  6F 66 20 61 6E 20 61 72 72 61 79 20 61 6C 6F 6E  F0 EB 2C 77 BA 55 00 00 01 00 00 00 00 00 00 80
    FF FF FF FF FF FF FF FF 00 4C 93 3F 00 00 00 00  00 00 80 BF 47 00 00 00 8F 36 16 C8 42 F3 EE 38  70 91 8C 21 47 7F 00 00 30 02 8E 21 47 7F 00 00
    11 7D 3F 3E 95 14 36 BE 10 82 8C 21 47 7F 00 00  F0 EB 2C 77 BA 55 00 00 02 00 00 00 00 00 00 00  FF FF FF FF FF FF FF FF 00 B8 D8 20 00 00 00 00
    00 00 80 3F 47 00 00 00 32 8B D6 E1 BB 16 76 DB  F0 18 D8 20 47 7F 00 00 E0 90 D8 20 47 7F 00 00  30 21 DF 50 FC C6 B4 AD 00 B8 D8 20 47 7F 00 00
  * Frame 1: dtype float32, length 0
    array([], dtype=float32)
  * Frame 2: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)
  * Frame 3: dtype uint32, length 0
    array([], dtype=uint32)
  * Frame 4: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)

Serialized model bytes (405 bytes):
    02 00 00 00 01 00 00 00 00 18 A8 2F 77 BA 55 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 6E 70 75 74 2E 0A 0A 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00  00 00 00 00 00 F0 EB 2C 77 BA 55 00 00 00 00 00  00 FF FF FF FF 01 00 00 00 02 00 00 00 01 20 20
    20 00 00 00 80 00 00 00 00 01 00 20 61 20 66 75  6E 63 74 69 6F 6E 20 74 6F 20 31 2D 44 20 73 6C  69 63 65 73 20 6F 66 20 61 6E 20 61 72 72 61 79
    20 61 6C 6F 6E F0 EB 2C 77 BA 55 00 00 01 00 00  00 00 00 00 80 FF FF FF FF FF FF FF FF 00 4C 93  3F 00 00 00 00 00 00 80 BF 47 00 00 00 8F 36 16
    C8 42 F3 EE 38 70 91 8C 21 47 7F 00 00 30 02 8E  21 47 7F 00 00 11 7D 3F 3E 95 14 36 BE 10 82 8C  21 47 7F 00 00 F0 EB 2C 77 BA 55 00 00 02 00 00
    00 00 00 00 00 FF FF FF FF FF FF FF FF 00 B8 D8  20 00 00 00 00 00 00 80 3F 47 00 00 00 32 8B D6  E1 BB 16 76 DB F0 18 D8 20 47 7F 00 00 E0 90 D8
    20 47 7F 00 00 30 21 DF 50 FC C6 B4 AD 00 B8 D8  20 47 7F 00 00 
Deserialized model
Round-trip conversion preserved all bytes

Built a tree stump with leaf vector
Python buffer frames:
  * Frame 0: dtype uint8, length 240
    80 41 2D 77 BA 55 00 00 00 00 00 00 FF FF FF FF  01 00 00 00 02 00 00 00 01 72 2C 20 00 00 00 80  00 00 00 00 01 00 37 39 66 66 2E 0A 68 74 74 70
    3A 2F 2F 77 77 77 2E 6D 61 74 68 2E 73 66 75 2E  63 61 2F 7E 63 62 6D 2F 61 61 6E 64 73 2F 0A 0A  80 41 2D 77 BA 55 00 00 01 00 00 00 00 00 00 80
    FF FF FF FF FF FF FF FF 00 0B 9D 3F 00 00 00 00  04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  20 FA F0 76 BA 55 00 00 9C 0B 9D 3F 47 7F 00 00
    08 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  80 41 2D 77 BA 55 00 00 02 00 00 00 00 00 00 00  FF FF FF FF FF FF FF FF 00 07 65 81 00 00 00 00
    3C 00 64 8C 64 00 84 00 5A 82 65 82 65 07 65 83  64 0F 19 00 3C 00 64 8E 64 8F 84 00 5A 84 65 84  65 07 65 85 64 0F 19 00 3C 00 64 90 64 91 84 00
  * Frame 1: dtype float32, length 4
    array([-1.,  1.,  1., -1.], dtype=float32)
  * Frame 2: dtype uint64, length 4
    array([0, 0, 2, 4], dtype=uint64)
  * Frame 3: dtype uint32, length 0
    array([], dtype=uint32)
  * Frame 4: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)

Serialized model bytes (421 bytes):
    02 00 00 00 02 00 00 00 01 58 41 2D 77 BA 55 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 62 6D 2F 61 61 6E 64 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 03 00 00 00 04 00 00  00 00 00 00 00 00 00 80 BF 00 00 80 3F 00 00 80  3F 00 00 80 BF 04 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00  00 00 00 00 00 80 41 2D 77 BA 55 00 00 00 00 00
    00 FF FF FF FF 01 00 00 00 02 00 00 00 01 72 2C  20 00 00 00 80 00 00 00 00 01 00 37 39 66 66 2E  0A 68 74 74 70 3A 2F 2F 77 77 77 2E 6D 61 74 68
    2E 73 66 75 2E 63 61 2F 7E 63 62 6D 2F 61 61 6E  64 73 2F 0A 0A 80 41 2D 77 BA 55 00 00 01 00 00  00 00 00 00 80 FF FF FF FF FF FF FF FF 00 0B 9D
    3F 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 20 FA F0 76 BA 55 00 00 9C 0B 9D  3F 47 7F 00 00 08 00 00 00 00 00 00 00 04 00 00
    00 00 00 00 00 80 41 2D 77 BA 55 00 00 02 00 00  00 00 00 00 00 FF FF FF FF FF FF FF FF 00 07 65  81 00 00 00 00 3C 00 64 8C 64 00 84 00 5A 82 65
    82 65 07 65 83 64 0F 19 00 3C 00 64 8E 64 8F 84  00 5A 84 65 84 65 07 65 85 64 0F 19 00 3C 00 64  90 64 91 84 00 
Deserialized model
Round-trip conversion preserved all bytes

Built a tree stump with a categorical split
Python buffer frames:
  * Frame 0: dtype uint8, length 240
    50 79 30 77 BA 55 00 00 00 00 00 00 FF FF FF FF  01 00 00 00 02 00 00 00 02 00 00 00 00 00 00 80  00 00 00 00 47 00 00 00 E0 6D 15 1F 47 7F 00 00
    80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00 00  80 61 6D 41 47 7F 00 00 10 6E 15 1F 47 7F 00 00  50 79 30 77 BA 55 00 00 01 00 00 00 00 00 00 80
    FF FF FF FF FF FF FF FF 00 0B 9D 3F 00 00 00 00  00 00 80 BF 00 00 00 00 00 00 00 00 00 00 00 00  40 04 2D 77 BA 55 00 00 9C 0B 9D 3F 47 7F 00 00
    08 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  50 79 30 77 BA 55 00 00 02 00 00 00 00 00 00 00  FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00
    00 00 80 3F 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  * Frame 1: dtype float32, length 0
    array([], dtype=float32)
  * Frame 2: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)
  * Frame 3: dtype uint32, length 2
    array([0, 1], dtype=uint32)
  * Frame 4: dtype uint64, length 4
    array([0, 2, 2, 2], dtype=uint64)

Serialized model bytes (413 bytes):
    02 00 00 00 01 00 00 00 00 28 79 30 77 BA 55 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 61 6D 41 47 7F 00 00 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  00 00 00 00 00 00 00 00 00 01 00 00 00 04 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00
    00 00 00 00 00 02 00 00 00 00 00 00 00 02 00 00  00 00 00 00 00 03 00 00 00 00 00 00 00 50 79 30  77 BA 55 00 00 00 00 00 00 FF FF FF FF 01 00 00
    00 02 00 00 00 02 00 00 00 00 00 00 80 00 00 00  00 47 00 00 00 E0 6D 15 1F 47 7F 00 00 80 61 6D  41 47 7F 00 00 B0 4A 5D 41 47 7F 00 00 80 61 6D
    41 47 7F 00 00 10 6E 15 1F 47 7F 00 00 50 79 30  77 BA 55 00 00 01 00 00 00 00 00 00 80 FF FF FF  FF FF FF FF FF 00 0B 9D 3F 00 00 00 00 00 00 80
    BF 00 00 00 00 00 00 00 00 00 00 00 00 40 04 2D  77 BA 55 00 00 9C 0B 9D 3F 47 7F 00 00 08 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 50 79 30
    77 BA 55 00 00 02 00 00 00 00 00 00 00 FF FF FF  FF FF FF FF FF 00 00 00 00 00 00 00 00 00 00 80  3F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 
Deserialized model
Round-trip conversion preserved all bytes

Built a tree with depth 2, mix of categorical and numerical splits
Python buffer frames:
  * Frame 0: dtype uint8, length 560
    30 81 30 77 BA 55 00 00 00 00 00 00 FF FF FF FF  01 00 00 00 02 00 00 00 01 00 00 00 00 00 00 80  00 00 00 00 01 00 00 00 B0 4A 5D 41 47 7F 00 00
    80 61 6D 41 47 7F 00 00 E0 EA 15 1F 47 7F 00 00  80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00 00  30 81 30 77 BA 55 00 00 01 00 00 00 00 00 00 80
    03 00 00 00 04 00 00 00 02 0B 9D 3F 00 00 00 80  04 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  40 7A 30 77 BA 55 00 00 9C 0B 9D 3F 47 7F 00 00
    08 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  30 81 30 77 BA 55 00 00 02 00 00 00 00 00 00 00  05 00 00 00 06 00 00 00 02 2D 2B 41 01 00 00 80
    70 FB 8D 3F 47 00 00 00 F6 7B 07 D5 79 03 62 3A  B0 F5 8D 3F 47 7F 00 00 F7 5F E3 E9 35 F7 F9 F5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    30 81 30 77 BA 55 00 00 03 00 00 00 01 00 00 80  FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00 00
    70 24 55 41 47 7F 00 00 FC 1D 0E 73 43 55 EC 74  30 6D A0 25 47 7F 00 00 FD 53 78 F1 D2 48 38 B2  30 81 30 77 BA 55 00 00 04 00 00 00 01 00 00 00
    FF FF FF FF FF FF FF FF 00 4A 5D 41 00 00 00 00  00 00 80 3F 47 00 00 00 80 ED 15 1F 47 7F 00 00  80 61 6D 41 47 7F 00 00 B0 ED 15 1F 47 7F 00 00
    80 61 6D 41 47 7F 00 00 E0 ED 15 1F 47 7F 00 00  30 81 30 77 BA 55 00 00 05 00 00 00 02 00 00 80  FF FF FF FF FF FF FF FF 00 EE 15 1F 00 00 00 00
    00 00 80 BF 47 00 00 00 B0 4A 5D 41 47 7F 00 00  80 61 6D 41 47 7F 00 00 40 EE 15 1F 47 7F 00 00  80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00 00
    30 81 30 77 BA 55 00 00 06 00 00 00 02 00 00 00  FF FF FF FF FF FF FF FF 00 4A 5D 41 00 00 00 00  00 00 00 40 47 00 00 00 A0 EE 15 1F 47 7F 00 00
    80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00 00  80 61 6D 41 47 7F 00 00 D0 EE 15 1F 47 7F 00 00  
  * Frame 1: dtype float32, length 0
    array([], dtype=float32)
  * Frame 2: dtype uint64, length 8
    array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint64)
  * Frame 3: dtype uint32, length 3
    array([0, 1, 0], dtype=uint32)
  * Frame 4: dtype uint64, length 8
    array([0, 0, 2, 3, 3, 3, 3, 3], dtype=uint64)

Serialized model bytes (801 bytes):
    02 00 00 00 01 00 00 00 00 08 81 30 77 BA 55 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 E9 15 1F 47 7F 00 00 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 07 00 00 00 00 00 00  00 00 00 00 00 08 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00
    00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00
    00 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 03 00 00 00 00 00 00 00 07 00 00 00 00 00 00
    00 30 81 30 77 BA 55 00 00 00 00 00 00 FF FF FF  FF 01 00 00 00 02 00 00 00 01 00 00 00 00 00 00  80 00 00 00 00 01 00 00 00 B0 4A 5D 41 47 7F 00
    00 80 61 6D 41 47 7F 00 00 E0 EA 15 1F 47 7F 00  00 80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00  00 30 81 30 77 BA 55 00 00 01 00 00 00 00 00 00
    80 03 00 00 00 04 00 00 00 02 0B 9D 3F 00 00 00  80 04 00 00 00 00 00 00 00 02 00 00 00 00 00 00  00 40 7A 30 77 BA 55 00 00 9C 0B 9D 3F 47 7F 00
    00 08 00 00 00 00 00 00 00 04 00 00 00 00 00 00  00 30 81 30 77 BA 55 00 00 02 00 00 00 00 00 00  00 05 00 00 00 06 00 00 00 02 2D 2B 41 01 00 00
    80 70 FB 8D 3F 47 00 00 00 F6 7B 07 D5 79 03 62  3A B0 F5 8D 3F 47 7F 00 00 F7 5F E3 E9 35 F7 F9  F5 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 30 81 30 77 BA 55 00 00 03 00 00 00 01 00 00  80 FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00  00 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00
    00 70 24 55 41 47 7F 00 00 FC 1D 0E 73 43 55 EC  74 30 6D A0 25 47 7F 00 00 FD 53 78 F1 D2 48 38  B2 30 81 30 77 BA 55 00 00 04 00 00 00 01 00 00
    00 FF FF FF FF FF FF FF FF 00 4A 5D 41 00 00 00  00 00 00 80 3F 47 00 00 00 80 ED 15 1F 47 7F 00  00 80 61 6D 41 47 7F 00 00 B0 ED 15 1F 47 7F 00
    00 80 61 6D 41 47 7F 00 00 E0 ED 15 1F 47 7F 00  00 30 81 30 77 BA 55 00 00 05 00 00 00 02 00 00  80 FF FF FF FF FF FF FF FF 00 EE 15 1F 00 00 00
    00 00 00 80 BF 47 00 00 00 B0 4A 5D 41 47 7F 00  00 80 61 6D 41 47 7F 00 00 40 EE 15 1F 47 7F 00  00 80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00
    00 30 81 30 77 BA 55 00 00 06 00 00 00 02 00 00  00 FF FF FF FF FF FF FF FF 00 4A 5D 41 00 00 00  00 00 00 00 40 47 00 00 00 A0 EE 15 1F 47 7F 00
    00 80 61 6D 41 47 7F 00 00 B0 4A 5D 41 47 7F 00  00 80 61 6D 41 47 7F 00 00 D0 EE 15 1F 47 7F 00  00 
Deserialized model
Round-trip conversion preserved all bytes

