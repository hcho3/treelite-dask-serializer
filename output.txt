Built a tree stump
Python buffer frames:
  * Frame 0: dtype int32, length 1
    array([2], dtype=int32)
  * Frame 1: dtype int32, length 1
    array([1], dtype=int32)
  * Frame 2: dtype uint8, length 1
    00 
  * Frame 3: dtype uint8, length 40
    98 19 05 5A 22 56 00 00 08 00 00 00 00 00 00 00  69 64 65 6E 74 69 74 79 00 00 00 00 00 00 00 00  00 00 80 3F 00 00 00 00 
  * Frame 4: dtype Node, length 3
    (cleft_, cright_, sindex_, info_, data_count_, sum_hess_, gain_, split_type_, cmp_, missing_category_to_zero_, data_count_present_, 
     sum_hess_present_, gain_present_)
    array([
        (1, 2, 2147483648, 0., 0, 0., 0., 1, 1, False, False, False, False)
        (-1, -1, 0, -1., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 1., 0, 0., 0., 0, 0, False, False, False, False)
    ])
  * Frame 5: dtype float32, length 0
    array([], dtype=float32)
  * Frame 6: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)
  * Frame 7: dtype uint32, length 0
    array([], dtype=uint32)
  * Frame 8: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)

Serialized model bytes (309 bytes):
    02 00 00 00 01 00 00 00 00 98 19 05 5A 22 56 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 00 00 00 00 00 00 00 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00  00 00 00 00 00 01 00 00 00 02 00 00 00 00 00 00  80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 01 01 00  00 00 00 00 00 FF FF FF FF FF FF FF FF 00 00 00  00 00 00 80 BF 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 FF FF FF FF FF FF FF FF 00 00 00  00 00 00 80 3F 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 
Deserialized model
Round-trip conversion preserved all bytes

Built a tree stump with leaf vector
Python buffer frames:
  * Frame 0: dtype int32, length 1
    array([2], dtype=int32)
  * Frame 1: dtype int32, length 1
    array([2], dtype=int32)
  * Frame 2: dtype uint8, length 1
    01 
  * Frame 3: dtype uint8, length 40
    78 4A 07 5A 22 56 00 00 08 00 00 00 00 00 00 00  69 64 65 6E 74 69 74 79 00 81 9A 40 9D 7F 00 00  00 00 80 3F 00 00 00 00 
  * Frame 4: dtype Node, length 3
    (cleft_, cright_, sindex_, info_, data_count_, sum_hess_, gain_, split_type_, cmp_, missing_category_to_zero_, data_count_present_, 
     sum_hess_present_, gain_present_)
    array([
        (1, 2, 2147483648, 0., 0, 0., 0., 1, 1, False, False, False, False)
        (-1, -1, 0, 0., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 0., 0, 0., 0., 0, 0, False, False, False, False)
    ])
  * Frame 5: dtype float32, length 4
    array([-1.,  1.,  1., -1.], dtype=float32)
  * Frame 6: dtype uint64, length 4
    array([0, 0, 2, 4], dtype=uint64)
  * Frame 7: dtype uint32, length 0
    array([], dtype=uint32)
  * Frame 8: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)

Serialized model bytes (325 bytes):
    02 00 00 00 02 00 00 00 01 78 4A 07 5A 22 56 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 81 9A 40 9D 7F 00 00 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 03 00 00 00 04 00 00  00 00 00 00 00 00 00 80 BF 00 00 80 3F 00 00 80  3F 00 00 80 BF 04 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00  00 00 00 00 00 01 00 00 00 02 00 00 00 00 00 00
    80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 01 01 00  00 00 00 00 00 FF FF FF FF FF FF FF FF 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 FF FF FF FF FF FF FF FF 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 
Deserialized model
Round-trip conversion preserved all bytes

Built a tree stump with a categorical split
Python buffer frames:
  * Frame 0: dtype int32, length 1
    array([2], dtype=int32)
  * Frame 1: dtype int32, length 1
    array([1], dtype=int32)
  * Frame 2: dtype uint8, length 1
    00 
  * Frame 3: dtype uint8, length 40
    F8 9F 04 5A 22 56 00 00 08 00 00 00 00 00 00 00  69 64 65 6E 74 69 74 79 00 34 37 5D 2C 20 64 74  00 00 80 3F 00 00 00 00 
  * Frame 4: dtype Node, length 3
    (cleft_, cright_, sindex_, info_, data_count_, sum_hess_, gain_, split_type_, cmp_, missing_category_to_zero_, data_count_present_, 
     sum_hess_present_, gain_present_)
    array([
        (1, 2, 2147483648, 0., 0, 0., 0., 2, 0, False, False, False, False)
        (-1, -1, 0, -1., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 1., 0, 0., 0., 0, 0, False, False, False, False)
    ])
  * Frame 5: dtype float32, length 0
    array([], dtype=float32)
  * Frame 6: dtype uint64, length 4
    array([0, 0, 0, 0], dtype=uint64)
  * Frame 7: dtype uint32, length 2
    array([0, 1], dtype=uint32)
  * Frame 8: dtype uint64, length 4
    array([0, 2, 2, 2], dtype=uint64)

Serialized model bytes (317 bytes):
    02 00 00 00 01 00 00 00 00 F8 9F 04 5A 22 56 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 34 37 5D 2C 20 64 74 00 00 80 3F 00 00 00
    00 01 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  00 00 00 00 00 00 00 00 00 01 00 00 00 04 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00
    00 00 00 00 00 02 00 00 00 00 00 00 00 02 00 00  00 00 00 00 00 03 00 00 00 00 00 00 00 01 00 00  00 02 00 00 00 00 00 00 80 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 02 00 00 00 00 00 00 00 FF FF FF  FF FF FF FF FF 00 00 00 00 00 00 80 BF 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF  FF FF FF FF FF 00 00 00 00 00 00 80 3F 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 
Deserialized model
Round-trip conversion preserved all bytes

Built 2 trees with depth 2, mix of categorical and numerical splits
Python buffer frames:
  * Frame 0: dtype int32, length 1
    array([2], dtype=int32)
  * Frame 1: dtype int32, length 1
    array([1], dtype=int32)
  * Frame 2: dtype uint8, length 1
    00 
  * Frame 3: dtype uint8, length 40
    C8 5A 07 5A 22 56 00 00 08 00 00 00 00 00 00 00  69 64 65 6E 74 69 74 79 00 81 9A 40 9D 7F 00 00  00 00 80 3F 00 00 00 00 
  * Frame 4: dtype Node, length 7
    (cleft_, cright_, sindex_, info_, data_count_, sum_hess_, gain_, split_type_, cmp_, missing_category_to_zero_, data_count_present_, 
     sum_hess_present_, gain_present_)
    array([
        (1, 2, 2147483648, 0., 0, 0., 0., 1, 1, False, False, False, False)
        (3, 4, 2147483648, 0., 0, 0., 0., 2, 0, False, False, False, False)
        (5, 6, 2147483649, 0., 0, 0., 0., 2, 0, False, False, False, False)
        (-1, -1, 0, -2., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 1., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, -1., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 2., 0, 0., 0., 0, 0, False, False, False, False)
    ])
  * Frame 5: dtype float32, length 0
    array([], dtype=float32)
  * Frame 6: dtype uint64, length 8
    array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint64)
  * Frame 7: dtype uint32, length 3
    array([0, 1, 0], dtype=uint32)
  * Frame 8: dtype uint64, length 8
    array([0, 0, 2, 3, 3, 3, 3, 3], dtype=uint64)
  * Frame 9: dtype Node, length 7
    (cleft_, cright_, sindex_, info_, data_count_, sum_hess_, gain_, split_type_, cmp_, missing_category_to_zero_, data_count_present_, 
     sum_hess_present_, gain_present_)
    array([
        (1, 2, 2147483648, 0., 0, 0., 0., 1, 1, False, False, False, False)
        (3, 4, 2147483648, 0., 0, 0., 0., 2, 0, False, False, False, False)
        (5, 6, 2147483649, 0., 0, 0., 0., 2, 0, False, False, False, False)
        (-1, -1, 0, -2., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 1., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, -1., 0, 0., 0., 0, 0, False, False, False, False)
        (-1, -1, 0, 2., 0, 0., 0., 0, 0, False, False, False, False)
    ])
  * Frame 10: dtype float32, length 0
    array([], dtype=float32)
  * Frame 11: dtype uint64, length 8
    array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint64)
  * Frame 12: dtype uint32, length 3
    array([0, 1, 0], dtype=uint32)
  * Frame 13: dtype uint64, length 8
    array([0, 0, 2, 3, 3, 3, 3, 3], dtype=uint64)

Serialized model bytes (1097 bytes):
    02 00 00 00 01 00 00 00 00 C8 5A 07 5A 22 56 00  00 08 00 00 00 00 00 00 00 69 64 65 6E 74 69 74  79 00 81 9A 40 9D 7F 00 00 00 00 80 3F 00 00 00
    00 02 00 00 00 00 00 00 00 07 00 00 00 00 00 00  00 00 00 00 00 08 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00
    00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00
    00 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 03 00 00 00 00 00 00 00 07 00 00 00 00 00 00
    00 01 00 00 00 02 00 00 00 00 00 00 80 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 01 01 00 00 00 00 00
    00 03 00 00 00 04 00 00 00 00 00 00 80 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00
    00 05 00 00 00 06 00 00 00 01 00 00 80 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00
    00 FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00  C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 FF FF FF FF FF FF FF FF 00 00 00 00 00 00 80  3F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 FF FF FF FF FF FF FF FF 00 00 00 00 00 00 80  BF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00  40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 07 00 00 00 00 00 00 00 00 00 00 00 08 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00
    00 01 00 00 00 00 00 00 00 08 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00
    00 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00  00 07 00 00 00 00 00 00 00 01 00 00 00 02 00 00
    00 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 01 01 00 00 00 00 00 00 03 00 00 00 04 00 00
    00 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 02 00 00 00 00 00 00 00 05 00 00 00 06 00 00
    00 01 00 00 80 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 02 00 00 00 00 00 00 00 FF FF FF FF FF FF FF
    FF 00 00 00 00 00 00 00 C0 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF
    FF 00 00 00 00 00 00 80 3F 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF
    FF 00 00 00 00 00 00 80 BF 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF
    FF 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 
Deserialized model
Round-trip conversion preserved all bytes

